version: '3.9'

services:

  api:
    image: sergoja/todolist:latest
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    restart: always

  migrations:
    image: sergoja/todolist:latest
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_USER: ${{DB_USER}}
      POSTGRES_PASSWORD: ${{env.DB_PASSWORD}}
      POSTGRES_DB: ${{ env.DB_NAME }}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_completed_successfully
    restart: always
