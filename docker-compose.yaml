version: '3.9'

services:

  api:
    build:
      context: ./
    env_file: .env
    environment:
      DB_HOST: postgres
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    restart: always

  migrations:
    build: .
    env_file: .env
    environment:
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_started
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  bot:
    platform: linux/amd64
    build: .
    env_file: .env
    depends_on:
            postgres:
              condition: service_healthy
            migrations:
              condition: service_completed_successfully
    environment:
      DB_HOST: postgres
    volumes:
      - ./todolist/bot/:/opt/todolist/bot/
    command: python3 manage.py runbot
